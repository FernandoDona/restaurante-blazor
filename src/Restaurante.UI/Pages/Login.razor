@page "/Login"
@using Restaurante.UI.HttpClients
@inject NavigationManager NavigationManager;
@inject IAuthenticationService AuthenticationService

<section class="d-flex align-items-center">
    <div class="container my-2">
        @if (isLoginSucceeded == false)
        {
            <div class="row justify-content-center">
                <div class="alert alert-danger col-12 col-lg-4 text-center" role="alert">
                    @loginFailedMessage
                </div>
            </div>
        }
        <div class="row justify-content-center">
            <div class="col-12 col-lg-4 p-0">
                <EditForm Model="@loginRequest" class="card card-body p-3" OnValidSubmit="SignIn">
                    <DataAnnotationsValidator />
                    <div class="form-group p-2">
                        <label for="username" class="form-label">Usuário</label>
                        <div class="">
                            <InputText class="form-control" id="username" @bind-Value="loginRequest.Username"/>
                            <ValidationMessage For="@(() => loginRequest.Username)"/>
                        </div>
                    </div>
                    <div class="form-group p-2">
                        <label for="password" class="form-label">Senha</label>
                        <div class="">
                            <InputText type="password" class="form-control" id="password" @bind-Value="loginRequest.Password" />
                            <ValidationMessage For="@(() => loginRequest.Password)"/>
                        </div>
                    </div>
                    <div class="d-inline-flex col-md-12 justify-content-end m-2 mt-4 px-3">
                        <button type="submit" class="btn btn-dark">Log In</button>
                    </div>
                </EditForm>
            </div>
        </div>
        <div class="row justify-content-center py-2">
                <p class="text-center">Não é cadastrado? <a href="/cadastro">Clique aqui.</a></p>
            </div>
    </div>
</section>

@code {
    private Models.LoginRequest loginRequest = new();
    private bool isLoginSucceeded = true;
    private string loginFailedMessage = string.Empty;

    private async Task SignIn()
    {
        isLoginSucceeded = await AuthenticationService.LoginAsync(loginRequest);

        if (isLoginSucceeded)
        {
            NavigationManager.NavigateTo("/");
            return;
        }

        isLoginSucceeded = false;
        loginFailedMessage = "Não foi possível realizar o login.";
    }
}
