@page "/Cadastro"
@using Restaurante.UI.HttpClients
@inject NavigationManager NavigationManager;
@inject IAuthenticationService AuthenticationService

<section class="d-flex align-items-center min-content-height">
    <div class="container">
        @if (isRegisterSucceeded == false)
        {
            <div class="row justify-content-center">
                <div class="alert alert-danger col-md-4 text-center" role="alert">
                    @registerFailedMessage
                </div>
            </div>
        }
        <div class="row justify-content-center">
            <div class="col-md-4 p-0">
                <EditForm Model="@registerUserRequest" class="card card-body p-3" OnValidSubmit="RegisterUser">
                    <DataAnnotationsValidator />
                    <div class="form-group p-2">
                        <label for="username" class="form-label">Usuário</label>
                        <div class="">
                            <InputText class="form-control" id="username" @bind-Value="registerUserRequest.Username"/>
                            <ValidationMessage For="@(() => registerUserRequest.Username)"/>
                        </div>
                    </div>
                    <div class="form-group p-2">
                        <label for="email" class="form-label">Email</label>
                        <div class="">
                            <InputText class="form-control" id="email" @bind-Value="registerUserRequest.Email" />
                            <ValidationMessage For="@(() => registerUserRequest.Email)"/>
                        </div>
                    </div>
                    <div class="form-group p-2">
                        <label for="password" class="form-label">Senha</label>
                        <div class="">
                            <InputText type="password" class="form-control" id="password" @bind-Value="registerUserRequest.Password" />
                            <ValidationMessage For="@(() => registerUserRequest.Password)"/>
                        </div>
                    </div>
                    <div class="form-group p-2">
                        <label for="re-password" class="form-label">Repita a senha</label>
                        <div class="">
                            <InputText type="password" class="form-control" id="re-password" @bind-Value="registerUserRequest.RePassword" />
                            <ValidationMessage For="@(() => registerUserRequest.RePassword)"/>
                        </div>
                    </div>
                    <div class="d-inline-flex col-md-12 justify-content-end m-2 mt-4 px-3">
                        <button type="submit" class="btn btn-dark">Cadastrar</button>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</section>

@code {
    private RegisterUserRequest registerUserRequest = new();
    private bool isRegisterSucceeded = true;
    private string registerFailedMessage = string.Empty;

    private async Task RegisterUser()
    {
        isRegisterSucceeded = await AuthenticationService.RegisterAsync(registerUserRequest);

        if (isRegisterSucceeded)
        {
            await AuthenticationService.LoginAsync(new LoginRequest { Username = registerUserRequest.Username, Password = registerUserRequest.Password });
            NavigationManager.NavigateTo("/");
            return;
        }

        isRegisterSucceeded = false;
        registerFailedMessage = "Não foi possível realizar o cadastro.";
    }
}
